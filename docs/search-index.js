var searchIndex = new Map(JSON.parse('[["citrus",{"t":"CCCCCCCCCCCCCCCCCCCFFFOOOONNNNNNHOONNONNNNNNONNNONNNONNNOONNNONNNOOOOOONOOOOOOOONNNNNNNNNNNNFFPPPPPPFGPGPPPGOOOONNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNOOONONNNNNNONNNNNNOOOOOOOOOOOONNNNNNONNNNNNHOOOOOOOOOOOOOOOOOOOOOOHOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNOOOONNNNNNOSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHHHHHHHHHHHHHHHHHTTTFTTTTTTTTTTTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNFPGFFFFFPFONNNNNNNNNNNNNNNNOOOOOONNNNHONNNNNNNNNNNNNNNNOOONNNNNNNNOONNNNNNNNNOOOONNNNNNNNONNNNNNNNOOOOOOOOOOOOOOOOOOOHHHOONNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNOOOOTTTTTTTTFTHNNNNNNNNNNNNNHNNNHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNHNHFFNNNNNNNNNNNNNONNNNNNONNOONOONNNNNNNNHHEEECCCCFNNNONNNNNNNNNNNNNNNNNONNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNKMMMMNMMMMFOONNONNNONNNNNOOOHONNNNFFPPPFFPFFPPPPPPGPPGGFFPFPPPPOONNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOOONOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNOOOOOOOOOOOOHOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNOOOOOOOOOOFFFFFONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNOONNNNNHHHSSFFFFOOOOOONNNNNNNNONNNNNNNNOOOONNNNOOONNNNOOOONNNNNNNNOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNONNNNOOIIIIIIICHHCHHHHCHHHCHHHHHFPPPPPGPNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["collparts","config","constants","defaults","engine","grid","interface","io","lines","macros","messages","model","pops","raytrace","solver","source","tree","types","utils","CollisionalPartnerData","MolData","Rates","aeinst","amass","beinstl","beinstu","borrow","","","borrow_mut","","","check_user_density_weights","cmb","collisional_partner_id","default","","density_index","deref","","","deref_mut","","","down","drop","","","eterm","fmt","","","freq","from","","","gir","gstat","init","","","interp_coeff","into","","","lal","lau","lcl","lcu","mol_name","name","new","nlev","nline","npart","ntemp","ntrans","part","t_binlow","temp","try_from","","","try_into","","","type_id","","","vzip","","","Config","Image","JskyPerPixel","Kelvin","Legacy","LsunPerPixel","Modern","OpticalDepth","Parameters","RayTraceAlgorithm","SI","Sampling","Uniform","UniformBiased","UniformExact","Unit","azimuth","bandwidth","binoutput_file","blend","borrow","","","","","","borrow_mut","","","","","","cmb_temp","collisional_partner_ids","collisional_partner_mol_weights","collisional_partner_names","collisional_partner_user_set_flags","data_flags","default","","","","","","deref","","","","","","deref_mut","","","","","","deserialize","","","","","distance","do_interpolate_vels","","do_line","do_mol_calcs","do_pregrid","do_solve_rte","drop","","","","","","dust","dust_weights","edge_vels_available","eq","filename","fmt","","","","","","freq","from","","","","","","grid_data_files","grid_density_global_max","grid_density_max_locations","grid_density_max_values","grid_file","grid_in_file","grid_out_files","images","img_res","img_units","incl","inclination","init","","","","","","init_lte","into","","","","","","load_config","lte_only","min_scale","min_scale_squ","mol_data_files","mol_i","n_cont_images","n_images","n_line_images","n_solve_iters_done","n_species","ncell","nchan","nmol_weights","nsolve_iters","nthreads","num_densities","num_dims","num_grid_density_maxima","num_units","output_file","p_intensity","parameters","parse_config","phi","pixel","polarization","posang","position_angle","pre_grid","pxls","radius","radius_squ","ray_trace_algorithm","reset_rng","restart","rotation_matrix","sampling","sampling_algorithm","sink_points","source_velocity","taylor_cutoff","theta","trans","try_from","","","","","","try_into","","","","","","type_id","","","","","","unit","use_abun","use_vel_func_in_raytrace","vel_res","vzip","","","","","","write_grid_at_stage","AMU_CGS","AMU_SI","ARCSEC_TO_RAD","AU_CGS","AU_SI","BOLTZMANN_CGS","BOLTZMANN_SI","CITRUS_GLOBAL_EPS","CITRUS_RT_EPS","GRAVITATIONAL_CONST_CGS","GRAVITATIONAL_CONST_SI","HCKB","HPIP","JULIAN_YEAR_SI","LOCAL_CMB_TEMP_SI","PARSEC_SI","PLANCK_CGS","PLANCK_SI","SOLAR_MASS_CGS","SOLAR_MASS_SI","SOLAR_RADIUS_CGS","SOLAR_RADIUS_SI","SPEED_OF_LIGHT_CGS","SPEED_OF_LIGHT_SI","STEFAN_BOLTZMANN_CGS","STEFAN_BOLTZMANN_SI","TYPICAL_ISM_DENS","DENSITY_EXP","FIX_RANDOM_SEEDS","MAX_NUM_HIGH","MAX_NUM_OF_COLLISIONAL_PARTNERS","MAX_NUM_OF_SPECIES","NUM_OF_GRID_STAGES","NUM_RANDOM_DENS","N_DIMS","RAYS_PER_POINT","cmb_temp","collisional_partner_ids","collisional_partner_mol_weights","collisional_partner_names","dust_weights","grid_data_files","grid_density","grid_density_max_locations","grid_density_max_values","grid_out_files","image_angle","image_value_f64","image_value_i64","mol_data","mol_data_files","nmol_weights","nthreads","ABUNDANCE","ACOEFF","DENSITY","DataStage","MAGFIELD","MASK_ABUNDANCE","MASK_ACOEFF","MASK_ALL","MASK_ALL_BUT_MAG","MASK_DENSITY","MASK_NEIGHBOURS","MASK_POPULATIONS","MASK_TEMPS","MASK_TURB","MASK_VELOCITY","NEIGHBOURS","POPULATIONS","TEMPERATURES","TURB_DOPPLER","VELOCITY","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","borrow_mut","complement","contains","default","deref","deref_mut","deserialize","difference","drop","empty","extend","fmt","","","","","from","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","init","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","run","serialize","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","vzip","Cell","Cells","DelaunayResult","Grid","GridInfo","Keyword","Link","MoleculeInfo","NoCells","Point","bool_value","borrow","","","","","","","","borrow_mut","","","","","","","","centre","char_value","comment","cont","conv","datatype","default","","","","delaunay","dens","deref","","","","","","","","deref_mut","","","","","","","","dir","dopb_turb","double_value","drop","","","","","","","","ds","float_value","fmt","from","","","","","","","","gis","id","","","init","","","","","","","","int_value","into","","","","","","","","keyname","mag_field","mol","mol_name","mols","n_densities","n_dims","n_internal_points","n_levels","n_lines","n_link_vels","n_links","n_nn_indices","n_sink_points","n_species","neigh","","nphot","num_neigh","pre_define","read_or_build_grid","set_default_grid","sink","t","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","v1","v2","v3","vel","vels","vertex","vzip","","","","","","","","w","x","","xn","ABUNDANCE","DENSITY","DOPPLER","GASII_DUST","GRID_DENSITY","MAGFIELD","MOL_NUM_DENSITY","TEMPERATURE","UserFuncFlags","VELOCITY","abundance","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","borrow_mut","complement","contains","density","deref","deref_mut","difference","doppler","drop","empty","extend","fmt","","","","from","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","gas_to_dust_ratio","init","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","velocity","vzip","read_dust_file","ContinuumLine","Spec","borrow","","borrow_mut","","default","","deref","","deref_mut","","deserialize","drop","","dust","fmt","","from","","init","","intense","into","","knu","num_rays","serialize","stokes","tau","try_from","","try_into","","type_id","","vzip","","description","greetings","DefaultModel","PhysicsModel","PythonModel","composite","defaults","python","traits","CompositeModel","abundance","borrow","borrow_mut","default","density","deref","deref_mut","doppler","drop","from","gas_to_dust","grid_density","init","into","magfield","mol_num_density","new","temperature","try_from","try_into","type_id","user","velocity","vzip","DefaultModel","abundance","borrow","borrow_mut","density","deref","deref_mut","doppler","drop","from","gas_to_dust","init","into","magfield","mol_num_density","temperature","try_from","try_into","type_id","velocity","vzip","PythonModel","abundance","borrow","borrow_mut","density","deref","deref_mut","doppler","drop","from","gas_to_dust","init","into","magfield","mol_num_density","new","temperature","try_from","try_into","type_id","velocity","vzip","PhysicsModel","abundance","density","doppler","gas_to_dust","grid_density","magfield","mol_num_density","temperature","velocity","Populations","abun","binv","borrow","borrow_mut","cont","default","deref","deref_mut","dopb","drop","fmt","from","init","into","nmol","partner","pops","popsin","spec_num_dens","try_from","try_into","type_id","vzip","BaryVelocityBuffer","ChainContext","EmptyGrid","EntryFace","ExitFace","Face","FaceBasis","FailedToBuildChain","GridInterp","Intersect","MultipleCandidates","NeighborNotFound","NoEntryFaces","NonSpan","NotFound","OppositeVertexAmbiguity","Orientation","Other","ParallelFace","RTCError","RTCResult","RTPreparation","RayData","SVDFail","Simplex","SolverFail","Success","TooManyEntries","UnknownError","axes","bary","borrow","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","centres","clone","clone_into","clone_to_uninit","coll_par","cont","default","","","","","","","","deref","","","","","","","","","","","","deref_mut","","","","","","","","","","","","dist","drop","","","","","","","","","","","","edge_velocities","edge_vertex_indices","entry_cell_bary","eq","exit_cell_bary","fi","fmt","","","","","","","","","","","","from","","","","","","","","","","","","","id","init","","","","","","","","","","","","intensity","into","","","","","","","","","","","","is_inside_image","magnetic_field","mid_cell_bary","mol","neigh","num_edges","num_vertices","orientation","origin","ppi","r","","raytrace","shape_fns","simplex_centres","simplices","tau","to_owned","to_string","try_from","","","","","","","","","","","","try_into","","","","","","","","","","","","type_id","","","","","","","","","","","","vertex","vertex_coords","vertex_velocities","vzip","","","","","","","","","","","","x","","x_component_ray","y","chain_cell_ids","entry","","entry_intersect_first_cell","exit_intersects","len_chain_ptrs","Blend","BlendInfo","GridPointData","LineWithBlends","MolWithBlends","blends","borrow","","","","","borrow_mut","","","","","delta_v","deref","","","","","deref_mut","","","","","drop","","","","","from","","","","","init","","","","","into","","","","","jbar","line_i","line_j","lines_with_blends","mol_i","mol_j","mols","num_blends","num_lines_with_blends","num_mols_with_blends","phot","try_from","","","","","try_into","","","","","type_id","","","","","vfac","vfac_loc","vzip","","","","","source_fn_cont","source_fn_line","source_fn_polarized","MAX_RECURSION","N_RANDOMS","SubCellType","TreeRandomConstantType","TreeRandomInternalType","TreeType","abs_random_acceptable_range","abst_and_frac","all_high_point_densities","all_high_point_locs","axis_indices","axis_signs","borrow","","","","borrow_mut","","","","density_integral","deref","","","","deref_mut","","","","desired_num_points","dither","do_quasi_random","do_shuffle","drop","","","","expected_desired_num_points","field_origin","field_width","from","","","","high_point_densities","high_point_locations","in_random_buffer_len_i","in_random_locs","init","","","","into","","","","last_leaf_index","leaf_buf_len_i","leaves","max_density","max_leaf_index","max_num_trials","","max_recursion","monitor_fn","num_dims","num_high_points","num_in_randoms","num_sub_fields","par","quasi_random_gen","quasi_random_gen_type","random_gen","random_gen_type","random_seed","sum_density","total_num_high_points","try_from","","","","try_into","","","","type_id","","","","verbosity","vzip","","","","whole_field_origin","whole_field_width","BVector","IVector","RMatrix","RTensor","RVecView","RVector","UVector","aux","calc_dust_data","calc_source_fn","erf","gauss_line","get_dtg","get_dust_temp","get_erf","interp","interpolate_kappa","planck_fn","progress_bar","qrng","polynomial","erf","erf_inv","erfc","erfc_inv","CubicSpline","DifferentLengths","InsufficientPoints","NumericalError","OutOfBounds","PointsTooClose","SplineError","UnsortedPoints","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cubic_spline_from_slices","deref","","deref_mut","","drop","","eq","eval_with_extrapolation","fmt","","from","","init","","interpolate","into","","new","to_owned","to_string","try_from","","try_into","","type_id","","vzip","","DimensionTooLarge","Halton","HaltonError","borrow","","borrow_mut","","deref","","deref_mut","","drop","","fmt","","from","","init","","into","","new","next_point","to_string","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"citrus"],[19,"citrus::collparts"],[92,"citrus::config"],[282,"citrus::constants"],[309,"citrus::defaults"],[335,"citrus::engine"],[413,"citrus::grid"],[577,"citrus::interface"],[644,"citrus::io"],[645,"citrus::lines"],[683,"citrus::messages"],[685,"citrus::model"],[692,"citrus::model::composite"],[717,"citrus::model::defaults"],[738,"citrus::model::python"],[760,"citrus::model::traits"],[770,"citrus::pops"],[794,"citrus::raytrace"],[1031,"citrus::raytrace::RTCResult"],[1037,"citrus::solver"],[1117,"citrus::source"],[1120,"citrus::tree"],[1216,"citrus::types"],[1223,"citrus::utils"],[1236,"citrus::utils::aux"],[1237,"citrus::utils::erf"],[1241,"citrus::utils::interp"],[1285,"citrus::utils::qrng"],[1317,"anyhow"],[1318,"core::fmt"],[1319,"alloc::string"],[1320,"core::result"],[1321,"core::any"],[1322,"alloc::vec"],[1323,"serde::de"],[1324,"core::option"],[1325,"std::collections::hash::map"],[1326,"core::iter::traits::collect"],[1327,"bitflags::iter"],[1328,"serde::ser"],[1329,"pyo3::err"],[1330,"rand::rngs::std"]],"i":"``````````````````````b000Ab1Al120`21121120120112021202120221200120221121222211201120120120120``C`0Bn101``1`Bl00`Bf0l002314Cb1342501111111342501342501342501342521221111342501114213425021342501111111022221342501134250`1111211111121111112110`2212212111112111212213425013425013425021121342501`````````````````````````````````````````````````````Bj00`00000000000000000000000000000000000000000000000000000000000000`00000000000`F```````0`EdFbFdFf4ElEhEf6543721060661162106`1543721065437210611654372106166543721065510543721066543721066114333344333331011```11543721065437210654372106111150543721061212Fj0000000`0`0000000000000`000`00000000000000`000000000000000000000`0```EjFl1010101001011010100101000010101010``````````Fn00000000000000000000000`G`0000000000000000000`Gb00000000000000000000`Gf00000000`Gh0000000000000000`00000``HnHf0``Hl``220222`21````2`2022GjGlId35I`Gn36Hh5H`HjHd69;547:3821042227047:3821069;547:3821069;547:38210769;547:38210111:179;;547:3821069;;547:38210469;547:38210269;547:38210201041178238`13622;69;547:3821069;547:3821069;547:3821046169;547:382102002IfIhIj222`````IlJ`In2JbJd324102324103241032410324103241032410342112041033241032410324103332410`````````JfJh00110Jj2Jl21303213021302222213033321303321213021300203021222321212122322130213021302213022``````````````````````````Kd0000`0Kf101111`0101011011010100101101010101Kh``Jn1010101011101010100101010101","f":"``````````````````````{bd}{bf}11{h{{h{c}}}{}}00{{{h{j}}}{{h{jc}}}{}}00{{{h{jl}}}{{A`{n}}}}4{AbAd}{{}Ab}{{}b}2{Af{{h{c}}}{}}00{Af{{h{jc}}}{}}00{Abd}{Afn}00;{{{h{Ab}}{h{jAh}}}Aj}{{{h{b}}{h{jAh}}}Aj}{{{h{Al}}{h{jAh}}}Aj}>{cc{}}00??{{}Af}00{AlAd}{{}c{}}00{bAn}0{AbAn}0{bB`}{AbB`}?{bAf}00{AbAd}0{bAb}8?{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{hBd}00{{}c{}}00````````````````{Bff}0{lB`}{lAd}{h{{h{c}}}{}}00000{{{h{j}}}{{h{jc}}}{}}00000{lf}{lBh}004{lBj}{{}l}{{}Bl}{{}Bn}{{}Bf}{{}C`}{{}Cb}{Af{{h{c}}}{}}00000{Af{{h{jc}}}{}}00000{c{{Bb{l}}}Cd}{c{{Bb{Bl}}}Cd}{c{{Bb{Bn}}}Cd}{c{{Bb{Bf}}}Cd}{c{{Bb{C`}}}Cd}{Bff}{lCf}{BfCf}0111{Afn}00000{lCh}{lBh}4{{{h{Bn}}{h{Bn}}}Cf}{BfB`}{{{h{l}}{h{jAh}}}Aj}{{{h{Bl}}{h{jAh}}}Aj}{{{h{Bn}}{h{jAh}}}Aj}{{{h{Bf}}{h{jAh}}}Aj}{{{h{C`}}{h{jAh}}}Aj}{{{h{Cb}}{h{jAh}}}Aj}={cc{}}00000:{lf}::{lB`}0;{CbCj}{Bff}{BfBh}11{{}Af}00000{lCf}{{}c{}}00000{{{h{Cl}}}{{A`{Cb}}}}288{lBh}{BfAf}{lAf}00000120000{lCn}{BfD`}<2{Cbl}{Cb{{A`{{Db{l{Cj{B`Bf}}{Ch{{Bh{b}}}}}}}}}}<;9<<>2??{lBn}::{BfDd}{lBl}{lAd}8{Bff}{lf}18{c{{Bb{e}}}{}{}}00000{{}{{Bb{c}}}{}}00000{hBd}00000{BfC`}{lCf}06{{}c{}}00000{lDf}{{}f}000000000000000000000000000{{}Cf}{{}Af}00000{{}D`}3{{}{{Bh{Af}}}}{{}{{Bh{f}}}}{{}{{Bh{B`}}}}1{{}{{Ch{{Bh{B`}}}}}}{{{h{j{Df{f}}}}fAff}f}{{}{{Bh{{Df{f}}}}}}43996{Af{{Ch{{Bh{b}}}}}}458`````````````````````{{}Bj}{{BjBj}Bj}{{{h{jBj}}Bj}n}10{{{h{Bj}}}Dh}021{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{BjBj}{{{h{Bj}}Bj}Cf}7{Af{{h{c}}}{}}{Af{{h{jc}}}{}}{c{{Bb{Bj}}}Cd}9{Afn};{{{h{jBj}}c}n{{Dl{}{{Dj{Bj}}}}}}{{{h{Bj}}{h{jAh}}}Aj}0000{cc{}}{Dh{{Ch{Bj}}}}{DhBj}00{cBj{{Dl{}{{Dj{Bj}}}}}}{{{h{Cl}}}{{Ch{Bj}}}}{{}Af}{{{h{jBj}}Bj}n}{{BjBj}Bj}>{{}c{}}{Bjc{}}{{{h{Bj}}}Cf}0{{{h{Bj}}}{{Dn{Bj}}}}{{{h{Bj}}}{{E`{Bj}}}}{BjBj}7{{{h{jl}}{h{j{Cj{B`Bf}}}}{h{{Ch{{Bh{b}}}}}}}{{A`{n}}}}{{{h{Bj}}c}BbEb}{{{h{jBj}}BjCf}n}9:9:{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{hBd}<{{}c{}}``````````{EdCf}{h{{h{c}}}{}}0000000{{{h{j}}}{{h{jc}}}{}}0000000{EfDf}{EdB`}0{EhEj}{EhD`}{EdD`}{{}El}{{}Eh}{{}Ef}{{}Ed}{{{h{j{En{Eh}}}}AfCfCf}{{A`{F`}}}}{Ehd}{Af{{h{c}}}{}}0000000{Af{{h{jc}}}{}}0000000{EhBh}{Ehf}{Edf}{Afn}000000061{{{h{Ed}}{h{jAh}}}Aj}{cc{}}0000000{FbDf}{FbDh}{EhCn}{EfAf}{{}Af}0000000{EdAf}{{}c{}}0000000{EdB`}{Ehd}{EhCh}{FdB`}{FfBh}{FfFh}0{FfDh}{FdAf}021112{EhBh}{EfDf}{EhD`}{EhAf}{{{h{jl}}{h{j{Bh{Eh}}}}}{{A`{n}}}}{{{h{jl}}}{{A`{{Bh{Eh}}}}}}{{AfAf}{{Bh{Eh}}}}{EhCf}{EhDf}{c{{Bb{e}}}{}{}}0000000{{}{{Bb{c}}}{}}0000000{hBd}0000000{Ehd}000{Fbd}<{{}c{}}00000002{ElDf}?0``````````{{}f}{{}Fj}{{FjFj}Fj}{{{h{jFj}}Fj}n}10{{{h{Fj}}}Dh}021{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{FjFj}{{{h{Fj}}Fj}Cf}{{fff}f}{Af{{h{c}}}{}}{Af{{h{jc}}}{}}9;{Afn};{{{h{jFj}}c}n{{Dl{}{{Dj{Fj}}}}}}{{{h{Fj}}{h{jAh}}}Aj}000{cc{}}{Dh{{Ch{Fj}}}}{DhFj}00{cFj{{Dl{}{{Dj{Fj}}}}}}{{{h{Cl}}}{{Ch{Fj}}}}{{}f}{{}Af}{{{h{jFj}}Fj}n}{{FjFj}Fj}?{{}c{}}{Fjc{}}{{{h{Fj}}}Cf}0{{{h{Fj}}}{{Dn{Fj}}}}{{{h{Fj}}}{{E`{Fj}}}}{FjFj}7{{{h{jFj}}FjCf}n}7878{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{hBd}:{{fff}d}{{}c{}}{{{h{Cl}}}{{A`{{Db{dd}}}}}}``{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{}Ej}{{}Fl}{Af{{h{c}}}{}}0{Af{{h{jc}}}{}}0{c{{Bb{Fl}}}Cd}{Afn}0{Ejf}{{{h{Ej}}{h{jAh}}}Aj}{{{h{Fl}}{h{jAh}}}Aj}{cc{}}0{{}Af}0{Fld}{{}c{}}06{FlAf}{{{h{Fl}}c}BbEb}{FlDf}4{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{hBd}0{{}c{}}0{{}n}0````````{{{h{Fn}}fff}f}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{FnG`}3{Af{{h{c}}}{}}{Af{{h{jc}}}{}}5{Afn}{cc{}}7{{{h{Fn}}{h{{Df{f}}}}}f}{{}Af}{{}c{}}{{{h{Fn}}fff}{{Df{f}}}};{{{Ch{Gb}}}Fn}<{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{hBd}{FnCh}5{{}c{}}`{{{h{G`}}fff}f}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}2{Af{{h{c}}}{}}{Af{{h{jc}}}{}}4{Afn}{cc{}}6?>{{{h{G`}}fff}{{Df{f}}}}77<;:08`{{{h{Gb}}fff}f}760540320{{}Af}{{}c{}}{{{h{Gb}}fff}{{Df{f}}}}3{{{h{Cl}}}{{Gd{Gb}}}}4{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{hBd}4{{}c{}}`{{{h{Gf}}fff}f}000{{{h{Gf}}{h{{Df{f}}}}}f}{{{h{Gf}}fff}{{Df{f}}}}220`{Ghf}0{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{GhBh}{{}Gh}{Af{{h{c}}}{}}{Af{{h{jc}}}{}}6{Afn}{{{h{Gh}}{h{jAh}}}Aj}{cc{}}{{}Af}{{}c{}};8{Ghd}{{}n}1{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{hBd}{{}c{}}`````````````````````````````{GjBh}{Gld}{h{{h{c}}}{}}00000000000{{{h{j}}}{{h{jc}}}{}}00000000000{Gnd}{{{h{H`}}}H`}{{h{h{jc}}}n{}}{{hHb}n}{Glf}{HdEj}{{}Gn}{{}Gl}{{}Hf}{{}Hh}{{}Gj}{{}H`}{{}Hj}{{}Hd}{Af{{h{c}}}{}}00000000000{Af{{h{jc}}}{}}00000000000;{Afn}00000000000{HjBh}0{Hjd}{{{h{Hf}}{h{Hf}}}Cf}1{GlAf}{{{h{Hl}}{h{jAh}}}Aj}{{{h{Hn}}{h{jAh}}}Aj}0{{{h{I`}}{h{jAh}}}Aj}{{{h{Gn}}{h{jAh}}}Aj}{{{h{Gl}}{h{jAh}}}Aj}{{{h{Hf}}{h{jAh}}}Aj}{{{h{Hh}}{h{jAh}}}Aj}{{{h{Gj}}{h{jAh}}}Aj}{{{h{H`}}{h{jAh}}}Aj}{{{h{Hj}}{h{jAh}}}Aj}{{{h{Hd}}{h{jAh}}}Aj}{cc{}}0{IbHn}1111111111{GnAf}{{}Af}00000000000{H`d}{{}c{}}00000000000{H`Cf}{Hdd}{Hjd}{HdBh}{GnBh}{HjAf}0{GlHf}{Gjd}{H`Af}{HhBh}{GjBh}{{{h{jBf}}{h{j{En{Eh}}}}{h{l}}{h{{En{b}}}}{h{{Ch{{Db{dd}}}}}}}{{A`{nHn}}}}9{Hhd}{IdBh}?{hc{}}{hB`}{c{{Bb{e}}}{}{}}00000000000{{}{{Bb{c}}}{}}00000000000{hBd}00000000000{GnAn}{Idd}{HjBh}{{}c{}}00000000000{H`f}{HdDf}{Hdf}2{IfBh}{IhGl}{IjGl}{IfGl}3{IfAf}`````{IlBh}{h{{h{c}}}{}}0000{{{h{j}}}{{h{jc}}}{}}0000{Inf}{Af{{h{c}}}{}}0000{Af{{h{jc}}}{}}0000{Afn}0000{cc{}}0000{{}Af}0000{{}c{}}0000{J`d}{IlD`}{InD`}{JbBh}{JbD`}2{JdBh}41{JdD`}6{c{{Bb{e}}}{}{}}0000{{}{{Bb{c}}}{}}0000{hBd}000099{{}c{}}0000{{ff{h{Ej}}}{{Db{ff}}}}{{{h{Gh}}{h{b}}fAfff}{{Db{ff}}}}{{{h{d}}{h{Ej}}{h{Dd}}}{{A`{{Db{{Df{f}}f}}}}}}??````{JfDf}{Jhf}{JhBh}022{h{{h{c}}}{}}000{{{h{j}}}{{h{jc}}}{}}000{Jff}{Af{{h{c}}}{}}000{Af{{h{jc}}}{}}000{JhDh}7{JhCf}0{Afn}0005::{cc{}}000{JfBh}0{JhD`}{JjBh}{{}Af}000{{}c{}}000{JlD`}4{JlBh}=15{Jjf}6{JhCh}7{JfD`}8{JjD`}{Jhl}{JjJn}{JhJn}{JjK`}{JhK`}{JhAf}{Jff}{JhD`}{c{{Bb{e}}}{}{}}000{{}{{Bb{c}}}{}}000{hBd}0003{{}c{}}000{JhDf}0````````{{{h{jd}}{h{jd}}{h{Kb}}{h{Kb}}ffAf}n}{{ff}{{Db{ff}}}}`{{ff}f}{{{h{l}}{h{Kb}}f}f}{{{h{{Df{f}}}}}f}2`{{f{h{Kb}}{h{Kb}}}{{A`{fKd}}}}3{{fAf}n}`{{f{h{{En{f}}}}}f}{ff}000````````{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{{h{Kd}}}Kd}{{h{h{jc}}}n{}}{{hHb}n}{{{h{{En{f}}}}{h{{En{f}}}}}{{A`{KfKd}}}}{Af{{h{c}}}{}}0{Af{{h{jc}}}{}}0{Afn}0{{{h{Kd}}{h{Kd}}}Cf}{{{h{Kf}}f}{{A`{fKd}}}}{{{h{Kd}}{h{jAh}}}Aj}0{cc{}}0{{}Af}03{{}c{}}0{{{h{Kb}}{h{Kb}}}{{A`{KfKd}}}}{hc{}}{hB`}{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{hBd}0{{}c{}}0```{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{Af{{h{c}}}{}}0{Af{{h{jc}}}{}}0{Afn}0{{{h{Kh}}{h{jAh}}}Aj}0??>>=={Af{{Bb{JnKh}}}}{{{h{jJn}}}{{Bh{f}}}}<;;::9988","D":"ANb","p":[[5,"MolData",19],[8,"RVector",1216],[1,"f64"],[1,"reference",null,null,1],[0,"mut"],[5,"Parameters",92],[1,"unit"],[8,"Result",1317],[5,"CollisionalPartnerData",19],[1,"isize"],[1,"usize"],[5,"Formatter",1318],[8,"Result",1318],[5,"Rates",19],[8,"UVector",1216],[5,"String",1319],[6,"Result",1320,null,1],[5,"TypeId",1321],[5,"Image",92],[5,"Vec",1322],[5,"DataStage",335],[6,"Sampling",92],[6,"RayTraceAlgorithm",92],[6,"Unit",92],[5,"Config",92],[10,"Deserializer",1323],[1,"bool"],[6,"Option",1324,null,1],[5,"HashMap",1325],[1,"str"],[1,"i32"],[1,"i64"],[1,"tuple",null,null,1],[8,"RMatrix",1216],[1,"array"],[1,"u32"],[17,"Item"],[10,"IntoIterator",1326],[5,"Iter",1327],[5,"IterNames",1327],[10,"Serializer",1328],[5,"Keyword",413],[5,"Cell",413],[5,"Grid",413],[5,"ContinuumLine",645],[5,"Point",413],[1,"slice"],[6,"DelaunayResult",413],[5,"Link",413],[5,"MoleculeInfo",413],[5,"GridInfo",413],[1,"u16"],[5,"UserFuncFlags",577],[5,"Spec",645],[5,"CompositeModel",692],[5,"DefaultModel",717],[5,"PythonModel",738],[8,"PyResult",1329],[10,"PhysicsModel",760],[5,"Populations",770],[5,"FaceBasis",794],[5,"Intersect",794],[5,"Simplex",794],[5,"RayData",794],[1,"u8"],[5,"GridInterp",794],[6,"Orientation",794],[5,"Face",794],[5,"BaryVelocityBuffer",794],[6,"RTCResult",794],[6,"RTCError",794],[5,"ChainContext",794],[5,"Error",1317],[5,"RTPreparation",794],[15,"Success",1031],[15,"NoEntryFaces",1031],[15,"FailedToBuildChain",1031],[5,"LineWithBlends",1037],[5,"Blend",1037],[5,"GridPointData",1037],[5,"MolWithBlends",1037],[5,"BlendInfo",1037],[5,"SubCellType",1120],[5,"TreeRandomConstantType",1120],[5,"TreeRandomInternalType",1120],[5,"TreeType",1120],[5,"Halton",1285],[5,"StdRng",1330],[8,"RVecView",1216],[6,"SplineError",1241],[5,"CubicSpline",1241],[6,"HaltonError",1285]],"r":[[685,717],[686,760],[687,738]],"b":[[361,"impl-Flags-for-DataStage"],[362,"impl-DataStage"],[377,"impl-Binary-for-DataStage"],[378,"impl-LowerHex-for-DataStage"],[379,"impl-Octal-for-DataStage"],[380,"impl-UpperHex-for-DataStage"],[381,"impl-Debug-for-DataStage"],[384,"impl-Flags-for-DataStage"],[385,"impl-DataStage"],[593,"impl-UserFuncFlags"],[594,"impl-Flags-for-UserFuncFlags"],[609,"impl-LowerHex-for-UserFuncFlags"],[610,"impl-UpperHex-for-UserFuncFlags"],[611,"impl-Octal-for-UserFuncFlags"],[612,"impl-Binary-for-UserFuncFlags"],[615,"impl-Flags-for-UserFuncFlags"],[616,"impl-UserFuncFlags"],[907,"impl-Debug-for-RTCError"],[908,"impl-Display-for-RTCError"],[1265,"impl-Display-for-SplineError"],[1266,"impl-Debug-for-SplineError"],[1298,"impl-Display-for-HaltonError"],[1299,"impl-Debug-for-HaltonError"]],"c":"OjAAAAEAAAAAAAQAEAAAAEwCWgJeAm0CgwI=","e":"OzAAAAEAADQETwABAB8AIgATADkABQBCABsAXwAeAH8AAACBADEAuQASANIAFgDqADAAIwEAADYBHABUARAAagEAAG4BAQByAQMAdwEAAHoBBACBAQAAhgEAAIsBAACSAQEAmQECAJ0BJQDEAR4A6wEMAAACTABTAgAAVgIBAFoCAgBeAgEAYgIDAGgCAABtAgEAcwIAAH8CAgCDAhQAmgICAJ8CHwDAAgIAxAISANgCAQDbAhAA7QIBAPACAQDzAhsAEAMAABIDEQAlAw0ANAMhAFcDIAB5AxAAiwMLAJkDAACkAw0AvgMGAMYDAQDKAwEAzQNgADMEBAA9BCcAZgQiAI0EBwCZBA0AqAQAAKoEFgDJBAAAzAQEANIEAQDaBAAA4AQAAOIEBgDqBAYA8gQBAPYEAQD8BAoACAUMABcFAQAbBQoA","P":[[26,"T"],[32,""],[38,"T"],[44,""],[53,"T"],[56,""],[62,"U"],[65,""],[80,"U,T"],[83,"U"],[86,""],[89,"V"],[108,""],[112,"T"],[124,""],[136,"T"],[148,"__D"],[153,""],[178,"T"],[184,""],[203,"U"],[209,""],[253,"U,T"],[259,"U"],[265,""],[275,"V"],[281,""],[365,"T"],[367,""],[370,"T"],[372,"__D"],[373,""],[376,"T"],[377,""],[382,"T"],[383,""],[387,"T"],[388,""],[393,"U"],[394,"IntoIterator::IntoIter"],[395,""],[402,"__S"],[403,""],[408,"U,T"],[409,"U"],[410,""],[412,"V"],[423,""],[424,"T"],[440,""],[452,"T"],[468,""],[482,"T"],[490,""],[503,"U"],[511,""],[535,"U,T"],[543,"U"],[551,""],[565,"V"],[573,""],[597,"T"],[599,""],[602,"T"],[604,""],[608,"T"],[609,""],[613,"T"],[614,""],[618,"T"],[619,""],[625,"U"],[626,"IntoIterator::IntoIter"],[627,""],[638,"U,T"],[639,"U"],[640,""],[643,"V"],[644,""],[647,"T"],[651,""],[653,"T"],[657,"__D"],[658,""],[663,"T"],[665,""],[668,"U"],[670,""],[672,"__S"],[673,""],[675,"U,T"],[677,"U"],[679,""],[681,"V"],[683,""],[694,"T"],[696,""],[698,"T"],[700,""],[702,"T"],[703,""],[706,"U"],[707,""],[711,"U,T"],[712,"U"],[713,""],[716,"V"],[718,""],[719,"T"],[721,""],[722,"T"],[724,""],[726,"T"],[727,""],[729,"U"],[730,""],[733,"U,T"],[734,"U"],[735,""],[737,"V"],[739,""],[740,"T"],[742,""],[743,"T"],[745,""],[747,"T"],[748,""],[750,"U"],[751,""],[755,"U,T"],[756,"U"],[757,""],[759,"V"],[761,""],[773,"T"],[775,""],[777,"T"],[779,""],[782,"T"],[783,""],[784,"U"],[785,""],[790,"U,T"],[791,"U"],[792,""],[793,"V"],[823,""],[825,"T"],[849,""],[851,"T"],[852,""],[863,"T"],[887,""],[918,"T"],[920,""],[921,"T"],[931,""],[945,"U"],[957,""],[974,"T"],[975,""],[976,"U,T"],[988,"U"],[1000,""],[1015,"V"],[1027,""],[1043,"T"],[1053,""],[1054,"T"],[1064,""],[1069,"T"],[1074,""],[1079,"U"],[1084,""],[1095,"U,T"],[1100,"U"],[1105,""],[1112,"V"],[1117,""],[1132,"T"],[1140,""],[1141,"T"],[1149,""],[1160,"T"],[1164,""],[1172,"U"],[1176,""],[1197,"U,T"],[1201,"U"],[1205,""],[1210,"V"],[1214,""],[1249,"T"],[1253,""],[1254,"T"],[1255,""],[1257,"T"],[1261,""],[1267,"T"],[1269,""],[1272,"U"],[1274,""],[1275,"T"],[1276,""],[1277,"U,T"],[1279,"U"],[1281,""],[1283,"V"],[1288,"T"],[1296,""],[1300,"T"],[1302,""],[1304,"U"],[1306,""],[1309,"U,T"],[1311,"U"],[1313,""],[1315,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[26685]}